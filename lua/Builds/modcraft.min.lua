function()function createNS()local a,b,c;local d={}local function e(f,g)return#f==0 and g or f..'.'..g end;local function h(f,i)f=tostring(f)return setmetatable({},{__metatable=false,__index=function(j,k)local l=e(f,k)local m=d[l]if i and m then return j(k)end;return d[l]or h(l,i)end,__newindex=function(n,k,o)if i then error('Invalid Operation')end;if type(o)=='function'then o={constructor=o}end;if type(o)~='table'then error('Invalid Class Descriptor')end;local l=e(f,k)d[l]=setmetatable({},{__metatable=false,__newindex=function()error('class descriptors should not be edited')end,__index=function(p,k)if k=='__name'then return l end;if k=='__namespace'then return n end;return o[k]end,__pairs=function()return pairs(o)end})end,__call=function(j,k)local l=e(f,k)local m=d[l]if not m then return false end;return a(j,l,m)end,__eq=function(q,r)if type(q)=='table'then q=getmetatable(q)end;if type(r)=='table'then r=getmetatable(r)end;if type(q)=='table'then q=q.path end;if type(r)=='table'then r=r.path end;return q==r end,__tostring=function()return f end})end;function b(m)if type(m)~='table'then return{}end;local s=b(m.inherits)for k,o in pairs(m)do if k~='inherits'and k~='constructor'then s[k]=m[k]end end;return s end;function c(m,s,...)if type(m)~='table'then return end;c(m.inherits,s,...)if not m.constructor then return end;m.constructor(s,select(2,...))end;function a(h,l,m)return function(...)local s=b(m)s.__name=l;s.__type=m;s.__namespace=h;c(m,s,...)return s end end;local t=h('',false)local u=h('',true)return t,u end;class,new=createNS()function class:NameSpace()return createNS()end end()function()local v,w,x,a,y,z,A;class.ModCraft.DependencyResolver={constructor=function(B)local C={}local D={}C.register=w({instance=function(E,F)local G=v(false,E)G.singleton=true;G.instance=F;table.insert(D,G)end,singleton=function(E,H,class)local G=v(true,E,H,class)G.singleton=true;table.insert(D,G)end,contextual=function(E,H,class)local G=v(true,E,H,class)G.contextual=true;table.insert(D,G)end,transient=function(E,H,class)local G=v(true,E,H,class)table.insert(D,G)end})C.branch=function()local I=new.ModCraft:DependencyResolver()for J,G in ipairs(D)do if G.instance~=nil then I.register.instance(G.names,G.instance)elseif G.singleton then I.register.singleton(G.names,G.dependencies,G.class)elseif G.contextual then I.register.contextual(G.names,G.dependencies,G.class)else I.register.transient(G.names,G.dependencies,G.class)end end;return I end;C.resolve=function(...)local K=y(D)local l,L=select(1,...)if type(l)=='string'then return z(l,K,L or{})end;local class,L=select(1,...)local M=a(class)if M then return A({},M,K,L or{})end;local H,class,L=select(1,...)local M=a(class)if M then return A(H,M,K,L or{})end;local N,L=select(1,...)local class=table.remove(N)local M=a(class)if M then return A(N,M,K,L or{})end;error("Can't resolve requested signature")end;w(C,B)end}function w(O,P)return setmetatable(P or{},{__metatable=false,__newindex=function()error('This object should remain read-only')end,__index=function(j,k)return O[k]end,__pairs=function()return pairs(O)end})end;function v(Q,E,H,class)local G={names={},dependencies={},constructor=false,singleton=false,contextual=false}G.names=x(E)if#G.names==0 then error('No name(s) specified')end;G.constructor=a(H)if G.constructor then H={}end;if not G.constructor then G.constructor=a(class)end;if not G.constructor and type(H)=='table'then G.constructor=a(table.remove(H))end;if not G.constructor and Q then error('Class not specified')end;G.dependencies=x(H)return G end;function x(R)R=type(R)=='table'and R or{R}local S={}for J,o in ipairs(R)do if type(o)=='string'then table.insert(S,o)end end;return S end;function y(D)local K={}for J,G in ipairs(D)do if G.singleton then table.insert(K,G)else table.insert(K,{names=G.names,dependencies=G.dependencies,constructor=G.constructor,singleton=G.singleton,contextual=G.contextual})end end;return K end;function a(class)if type(class)~='table'then return false end;if type(class.__name)~='string'then return false end;local l=class.__name;if type(class.__namespace)~='table'then return false end;local h=tostring(class.__namespace)if string.sub(l,1,#h)~=h then return false end;l=string.sub(l,#h)local M=class.__namespace(l)if not M then return false end;return function(...)return M(nil,...)end end;function z(l,K,L)if L[l]~=nil then return L[l]end;local T={}for J,U in pairs(K)do for J,V in pairs(U.names)do if V==l then table.insert(T,U)break end end end;local W={}for J,X in pairs(T)do if X.instance~=nil then table.insert(W,X.instance)else local s=A(X.dependencies,X.constructor,K,L)table.insert(W,s)if X.singleton or X.contextual then X.instance=s end end end;return#W>1 and W or W[1]end;function A(H,M,K,L)local W={}for J,V in pairs(H)do table.insert(W,z(V,K,L))end;return M(args(W))end;function args(H)if#H>0 then return table.remove(H,1),args(H)end end end()function()local w,Y,D,Z;local _=new.ModCraft:DependencyResolver()function class.ModCraft:Application()local a0=_.branch()a0.register.instance('dependencies',a0)a0.register.instance('application',B)local a1={}local O={}a1.register=D(a0,O)a1.resolve=a0.resolve;a1.start=function()O.module=function()error('Module added after start. Please use .dependency to register late dependencies.')end;O.service=function()error('Service added after start. Please use .dependency to register late dependencies.')end;a1.start=function()error('Application already started.')end;local a2=a0.resolve('modules')if a2~=nil then if#a2==0 then a2={a2}end;Y(a2,'init')Y(a2,'start')end end;w(a1,B)end;function w(a3,P,a4)return setmetatable(P or{},{__metatable=false,__newindex=function()error('This object should remain readonly')end,__index=function(j,k)return a3[k]end,__pairs=function()return pairs(a3)end,__call=a4})end;function Y(R,a5)for J,a6 in pairs(R)do if type(a6[a5])=='function'then a6[a5]()end end end;function Z(q,r)q=type(q)=='string'and{q}or q;r=type(r)=='string'and{r}or r;local a7={}for J,o in ipairs(q)do table.insert(a7,o)end;for J,o in ipairs(r)do table.insert(a7,o)end;return a7 end;function D(a0,O)O=O or{}O.service=function(E,H,a)a0.register.singleton(Z(E,'services'),H,a)end;O.module=function(E,H,a)a0.register.singleton(Z(E,'modules'),H,a)end;O.dependency=w({instance=a0.register.instance,singleton=a0.register.singleton,contextual=a0.register.contextual,transient=a0.register.transient},{},a0.register.contextual)return w(O)end;ModCraft=w({register=D(_),resolve=_.resolve,start=function()local a8=new.ModCraft:Application()a8.start()return a8 end})end()